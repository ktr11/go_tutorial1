// 変数・定数・リテラル
package main

import "fmt"

func main() {
	// var 変数名 型 で変数の定義を行う。 = 演算子で代入
	var name string
	name = "Mr.Go"
	fmt.Println("Hello", name)

	// 宣言と初期化を同時に行うときは型名の省略が可能
	var name2 = "Mr.Go2"
	fmt.Println("Hello,", name2)

	// 関数内に限り := 演算子を使用して代入を行うことで、varキーワードも省略可能
	name3 := "Mr.Go3"
	fmt.Println("Hello,", name3)

	// 定数 const キーワードで定数を定義できる。定数は定義と同時に必ず初期化を行う。
	const title = "Go言語入門"
	fmt.Println(title)

	// リテラル 上から10進数 8進数 16進数
	/*
		1234
		093
		0xA3
	*/
	// 浮動小数点数リテラル
	/*
		3.1415
		.25
		12.
		1.25e-3 // 0.00125の指数表記
	*/
	// 虚数リテラル
	/*
		2i
		3.1415i
		1.25e-3i
	*/

	// ルーンリテラル
	// Unicodeのコードポイントを表現する整数のことをルーン(Rune)と呼ぶ。
	/*
		'a'
		'あ'
		'\n'	エスケープシーケンスを使用できる
		'\u12AB'	コードポイントを直接記述可能
	*/

	// 文字列リテラル
	// 2種類の表現方法がある.

	// raw 文字列リテラル バッククォートで囲まれた文字列
	// エスケープシーケンス・コードポイントも評価されず、書かれたものをそのまま文字列として扱う。
	/*
		`abc`
		`\n` //改行ではなく \n の2文字として扱う。
		`ab
		cd`
	*/

	// interpreted文字列リテラル ダブルクォートで囲まれた文字列
	// エスケープシーケンスやUnicodeコードポイントが評価される
	/*
		"abc"
		"ab\ncd"
		"\u3042\u3044\u3046"
	*/
	
}
